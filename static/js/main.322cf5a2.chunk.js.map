{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/layout/Header.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","axios","url","method","then","_ref","data","catch","err","console","error","react_default","a","createElement","props","children","Component","Consumer","Contact","displayContactInfo","onShowClick","onDeleteClick","Axios","resp","log","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","color","react_router_dom","to","marginRight","defaultProps","Contacts","Fragment","contacts_Contact","TextInputGroup","label","placeholder","onChange","htmlFor","classnames","is-invalid","AddContact","errors","event","defineProperty","target","onSubmit","preventDefault","_this$state","newContact","history","push","_this$state2","layout_TextInputGroup","EditContact","updatedContact","match","params","_ref2","_ref2$data","_this3","About","Header","branding","NotFound","Test","title","body","fetch","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.322cf5a2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    action.payload,\r\n                    ...state.contacts\r\n                ]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    return (contact.id === action.payload.id\r\n                        ? (contact = action.payload)\r\n                        : contact);\r\n                })\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n};\r\n\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action)\r\n            );\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            url: 'https://jsonplaceholder.typicode.com/users',\r\n            method: 'GET'\r\n        }).then(({ data }) => {\r\n            this.setState({\r\n                contacts: data\r\n            });\r\n        }).catch(err => console.error(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    };\r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Consumer } from '../../context';\r\nimport Axios from 'axios';\r\n\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        displayContactInfo: false\r\n    };\r\n\r\n    onShowClick = () => {\r\n        this.setState({\r\n            displayContactInfo: !this.state.displayContactInfo\r\n        });\r\n    };\r\n    onDeleteClick = (id, dispatch) => {\r\n        Axios({\r\n            method: 'DELETE',\r\n            url: 'https://jsonplaceholder.typicode.com/users/' + id\r\n        }).then(resp => {\r\n            console.log('deleted successfully' + resp);\r\n            return dispatch({\r\n                type: 'DELETE_CONTACT',\r\n                payload: id\r\n            });\r\n        }).catch(err => console.error(err));\r\n    };\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { displayContactInfo } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {({ dispatch }) => {\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name + \" \"}\r\n                                {this.state.displayContactInfo ? (<i className=\"fas fa-sort-up\" onClick={this.onShowClick}\r\n                                    style={{ cursor: \"pointer\" }} />) : (<i className=\"fas fa-sort-down\" onClick={this.onShowClick}\r\n                                        style={{ cursor: \"pointer\" }} />)}\r\n                                <i className=\"fas fa-times\" onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                                    style={{ cursor: \"pointer\", float: \"right\", color: \"orange\" }} />\r\n\r\n                                <Link to={`/contact/edit/${id}`} >\r\n                                    <i  className=\"fas fa-pencil-alt\" style={{ cursor: \"pointer\", float: \"right\", color: \"black\", marginRight: '1rem' }} >\r\n\r\n                                    </i>\r\n                                </Link>\r\n\r\n                            </h4>\r\n                            {\r\n                                displayContactInfo ? (<ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>) : null\r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n};\r\n\r\nContact.defaultProps = {\r\n    name: 'filana',\r\n    email: 'filana@fil.ne',\r\n    phone: '+212 09 09 09 09'\r\n};\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\n\r\nimport { Consumer } from '../../context';\r\nimport Contact from './Contact';\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {state => {\r\n                    const { contacts } = state;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> list\r\n                            </h1>\r\n                            {contacts.map(contact => {\r\n                                return <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}/>\r\n                            })}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nfunction TextInputGroup({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                id={name}\r\n                type={type}\r\n                name={name}\r\n                className={classnames(' form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {\r\n                error && (\r\n                    <div className=\"invalid-feedback\">\r\n                        {error}\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    error: PropTypes.string.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text',\r\n    error: ''\r\n};\r\n\r\nexport default TextInputGroup\r\n\r\n","import React, { Component } from 'react'\r\n// import uuid from 'uuid';\r\nimport Axios from 'axios';\r\n\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onChange = (event) => this.setState({\r\n        [event.target.name]: event.target.value\r\n    });\r\n    onSubmit = (dispatch, event) => {\r\n        event.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check for errors\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {\r\n                    name: 'Name is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: {\r\n                    email: 'Email is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: {\r\n                    phone: 'Phone is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        Axios({\r\n            method: 'POST',\r\n            url: 'https://jsonplaceholder.typicode.com/users',\r\n            data: newContact\r\n        }).then(({ data }) => {\r\n            console.log(data);\r\n            return dispatch({\r\n                type: 'ADD_CONTACT',\r\n                payload: data\r\n            });\r\n        }).catch(err => console.error(err));\r\n\r\n\r\n        // Clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        });\r\n\r\n        // Redirection\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {state => {\r\n                    const { dispatch } = state;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label='Name'\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Email'\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Phone'\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Add Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\n// import uuid from 'uuid';\r\nimport Axios from 'axios';\r\n\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n\r\n        Axios({\r\n            method: 'GET',\r\n            url: 'https://jsonplaceholder.typicode.com/users/' + id\r\n        }).then(({ data: {\r\n            name, email, phone\r\n        } }) => {\r\n            this.setState({\r\n                name,\r\n                email,\r\n                phone\r\n            });\r\n        })\r\n    }\r\n\r\n    onChange = (event) => this.setState({\r\n        [event.target.name]: event.target.value\r\n    });\r\n    onSubmit = (dispatch, event) => {\r\n        event.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check for errors\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {\r\n                    name: 'Name is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: {\r\n                    email: 'Email is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: {\r\n                    phone: 'Phone is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const updatedContact={\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const { id } = this.props.match.params;\r\n        Axios({\r\n            method: 'PUT',\r\n            url: 'https://jsonplaceholder.typicode.com/users/' + id,\r\n            data: updatedContact\r\n        }).then(({ data}) => {\r\n             dispatch({\r\n                 type: 'UPDATE_CONTACT',\r\n                 payload: data\r\n             });\r\n        });\r\n\r\n\r\n        // Clear state\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        });\r\n\r\n        // Redirection\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {state => {\r\n                    const { dispatch } = state;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label='Name'\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Email'\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label='Phone'\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Update Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to mange contacts</p>\r\n            <p className=\"text-secondary\">Version 1.1.1</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">{branding}</Link>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-info-circle\"></i> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"h1-display-4\"> <span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                this.setState({\r\n                    title: data.title,\r\n                    body: data.body\r\n                });\r\n            });\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     console.log('dojasij');\r\n    // }\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport Header from './components/layout/Header';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manger\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}